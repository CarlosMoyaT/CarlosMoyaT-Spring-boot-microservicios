spring.application.name=bookingservice

server.port=8081

spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=admin
spring.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

inventory.service.url=http://localhost:8080/api/v1/inventory

#kafka
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.template.default-topic:booking
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# Exponer métricas y health a Prometheus
management.endpoints.web.exposure.include=prometheus,health,info
management.endpoint.prometheus.enabled=true
management.endpoint.health.show-details=always
management.metrics.export.prometheus.enabled=true




